// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 8, 25, 3, 6, 47, 325686282, time.UTC),
		},
		"/.DS_Store": &vfsgen۰CompressedFileInfo{
			name:             ".DS_Store",
			modTime:          time.Date(2020, 8, 25, 3, 6, 47, 325900273, time.UTC),
			uncompressedSize: 6148,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x98\x41\x8a\xc2\x30\x14\x86\xff\x97\x29\x43\x60\x36\x59\xce\x32\x57\x98\x1b\x84\xd2\x39\x41\x2f\x30\x83\x82\x08\x52\x41\xab\xeb\xae\x3c\x97\x47\x93\x92\x1f\x2c\x1a\xc5\x85\x0b\x91\xff\x83\xf0\x2d\x9a\x47\xa1\x85\xbc\xff\x05\x80\xd5\xbb\xf9\x0f\x10\x00\x78\x64\xe3\x80\x22\x9e\xeb\x0a\x47\x5b\x5e\x01\x58\x62\xb6\x6f\x37\xdd\x6a\xdd\x2d\xf0\x18\x63\xed\x27\xb6\xe8\xf1\x8f\xfe\xa2\xde\x20\x84\x10\x42\x88\x67\xc3\xfe\xea\xbf\xf4\x29\x84\x10\x85\xf3\x21\xd2\x89\x1e\xb2\x8d\xcf\x1d\x5d\x4d\x6a\x02\x1d\xe9\x44\x0f\xd9\xc6\x7d\x8e\xae\x68\x4f\x07\x3a\xd2\x89\x1e\xb2\x79\x68\x19\x87\x0f\xe3\x9b\x8d\x13\x8a\x05\x3a\xd2\x49\xff\x51\x88\x12\x1f\x59\x61\xec\xff\xbf\xb7\xe7\x7f\x21\xc4\x3b\xf7\xf9\xaa\x69\x9b\xfa\xce\x85\x9b\x63\x10\xf8\xe3\x9e\xe3\xb9\xd9\x17\x83\x80\xcb\x17\x86\xdf\x93\x50\xa0\x30\x20\xc4\x0b\x71\x0a\x00\x00\xff\xff\x8a\xfb\x05\x34\x04\x18\x00\x00"),
		},
		"/static": &vfsgen۰DirInfo{
			name:    "static",
			modTime: time.Date(2020, 8, 25, 3, 6, 47, 323420325, time.UTC),
		},
		"/static/.DS_Store": &vfsgen۰CompressedFileInfo{
			name:             ".DS_Store",
			modTime:          time.Date(2020, 8, 25, 3, 6, 47, 323490930, time.UTC),
			uncompressedSize: 6148,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x98\x41\xca\xc2\x30\x10\x85\xdf\xe4\xef\x22\xf0\x6f\xb2\x74\x99\x8d\x07\xf0\x06\xa1\xd4\x13\xf4\x02\x2e\x04\x41\xa4\x82\xa2\xeb\x1e\x5d\xea\x3c\xb0\x68\xed\xba\xc8\xfb\x36\x5f\x99\x24\x2d\x34\x90\xc9\x0c\x00\xab\x6f\xfb\x0d\x90\x00\x44\xb8\xb1\xc6\x27\x06\x20\xe0\x88\xeb\xbd\xbd\x74\xa7\x73\x77\x60\x0c\xcf\xf8\x6b\x8e\x0d\xef\x78\x1b\x17\x42\x08\x21\xc4\xf2\x60\x9e\x8e\xff\xfa\x15\x42\x88\x89\xf3\x21\xd3\x85\xee\xdd\xc6\xf1\x40\x57\xa3\x35\x89\xce\x74\xa1\x7b\xb7\x71\x5e\xa0\x2b\x3a\xd2\x89\xce\x74\xa1\x7b\x37\x0f\x2d\x63\xf1\x61\xfc\xb2\x45\x3a\xd1\x99\x2e\xda\x47\x21\xa6\xf8\x73\xa5\x21\xff\x6f\xbf\xd4\xff\x42\x88\x1f\xcf\xf3\x55\xd3\x36\xf5\x4c\xe3\x6e\x88\xef\x46\xcf\x73\x97\x80\xe0\x0d\xc5\xd5\x68\xad\x2e\x02\x42\x2c\x8c\x47\x00\x00\x00\xff\xff\xbd\xd7\x93\xbc\x04\x18\x00\x00"),
		},
		"/static/css": &vfsgen۰DirInfo{
			name:    "css",
			modTime: time.Date(2020, 8, 25, 3, 14, 27, 924195233, time.UTC),
		},
		"/static/css/.DS_Store": &vfsgen۰CompressedFileInfo{
			name:             ".DS_Store",
			modTime:          time.Date(2020, 8, 25, 3, 6, 47, 322651097, time.UTC),
			uncompressedSize: 6148,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x98\x31\xaa\xc3\x30\x10\x44\x67\xf4\x5d\x18\x7e\xa3\x32\xa5\x9a\x1c\x20\x37\x10\xc6\x39\x41\x2e\x90\x22\x57\x48\xaf\xa3\x07\xb3\x03\x11\x89\x92\xda\x84\x79\x60\x9e\xc0\x96\x0d\x36\xec\xee\x18\x00\x97\xfb\xed\x04\x64\x00\x33\xc2\x38\x62\xc8\xac\xe3\x8d\xd4\xad\xa9\x7b\x18\x63\x8c\x31\x66\xdf\x50\xfd\xfd\xdf\xaf\xc2\x18\x33\xa8\x0f\x45\xae\x72\x0b\x53\xe7\x93\x3c\xbd\xe6\x00\xc6\xd6\xcd\x55\x6e\x61\xea\xba\x24\x4f\xf2\x2c\x67\xb9\xc8\x55\x6e\x61\x15\x2d\x2a\x7c\x50\x4f\xa6\x12\x0a\x95\x42\x58\xe4\xea\xef\x68\xcc\x88\xbf\x50\xde\xfa\xff\xf9\x73\xfe\x37\xc6\xfc\x72\x9f\x9f\xd6\xcb\xba\x3c\x03\xc1\x70\x10\xb8\x76\xeb\x6f\x43\x40\x8a\x9f\x85\x87\x6e\xaf\x07\x01\x63\x76\xc6\x23\x00\x00\xff\xff\x6a\x00\x88\x6d\x04\x18\x00\x00"),
		},
		"/static/css/main.css": &vfsgen۰CompressedFileInfo{
			name:             "main.css",
			modTime:          time.Date(2020, 8, 25, 3, 6, 47, 322256965, time.UTC),
			uncompressedSize: 1569,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x9c\x54\xd1\x8e\xda\x3a\x10\x7d\xcf\x57\x8c\x76\x75\xa5\x5b\xd4\x80\xc3\xc2\x2e\x6b\x5e\xda\x1f\xe8\x43\xdb\x1f\x70\xb0\x09\x16\x8e\x27\x72\x86\x25\xb4\xe2\xdf\x2b\x3b\x4e\xc8\x66\x43\x1f\x2a\x4b\xa0\xcc\x8c\xcf\x1c\xcf\x99\x99\xc5\x0c\x7e\x1c\xf0\x0c\x9a\x40\xd7\xb0\xd7\x8d\x92\x40\x08\x74\x50\x40\x58\xc1\x6c\x91\xe4\x28\x2f\xf0\x3b\x01\x00\x28\xb5\x4d\x0f\x4a\x17\x07\xe2\xb0\x64\x4e\x95\xdb\xe4\x9a\x24\x8f\x56\xbc\xc5\x00\xa9\xeb\xca\x88\x0b\x87\xbd\x51\xcd\x36\x98\x8c\xae\x29\xad\xe9\x62\x54\x4a\x97\x4a\x71\xb0\x68\x55\xeb\xaa\x84\x94\xda\x16\xa9\x51\x7b\xe2\xb0\xae\x9a\x00\x37\xf7\x9f\x5d\x42\xe1\x0a\x6d\x53\xd7\xa6\x14\x27\xc2\x10\xf2\xa5\x54\x52\x0b\xf8\xdf\xf3\x39\x6b\x49\x07\x0e\x2f\xcf\xaf\x55\xf3\x29\x5c\x1b\xf0\xf1\x34\x52\xa9\x9d\xda\x91\x46\xcb\xc1\xe1\xb9\x63\x15\x23\x00\x22\x40\xb6\x0c\x04\xbc\xe5\x1a\x7e\x87\x3c\xa6\x99\xdc\x62\xc5\xe7\x51\x78\x7c\x1a\x87\xf9\x2a\x94\xa9\xb5\xee\xd1\x52\x5a\xeb\x5f\x8a\x43\x36\xcf\x96\xeb\xce\xe3\x41\xae\xfe\x61\xc9\x62\x16\xe9\xfb\xca\x2f\x66\xe1\x16\xbe\x29\xb7\x37\x78\xe6\x70\xd0\x52\x2a\xbb\x1d\xf8\xfa\x3c\xeb\xaa\x81\x8c\x55\xcd\xd0\x19\x39\x13\x56\x1c\x32\x55\x4e\xb8\x72\x24\xc2\xf2\x83\xd7\x68\xab\x7a\xa1\x9f\x46\xa8\xc3\x47\x2c\x2b\xea\x5c\x57\xff\xdf\xf6\x82\x88\x65\x20\xd5\x50\x2a\xd5\x0e\x9d\x68\xcb\x7f\x93\x7e\x87\x06\x1d\x87\xc7\x27\xb6\xfe\xfa\xc4\x5a\xdb\x18\x78\xa2\x47\x56\x9d\x44\x9d\x39\xea\xb1\x8a\xbd\x13\xd2\xcf\x73\x27\xac\xec\x3a\xe0\x06\xba\x64\xd3\xa0\xec\x0e\x28\x8b\xa0\x51\x93\xb4\x15\x78\x58\x09\x83\x82\x38\x78\xfb\xb0\x40\xfd\x10\xe4\x06\x77\xc7\xf7\xf5\xe9\xb0\x42\x8a\x29\xb0\xe0\x18\xa2\x85\x22\x0a\xa3\x0b\x3b\xe1\xfc\x5b\xaa\xb9\xc1\x02\x4f\x94\xe6\x27\x22\xb4\xb1\x1c\xb9\xd8\x1d\x0b\x87\x27\x2b\x87\x6a\xe4\xe8\xa4\x72\xff\xa4\x4f\x30\xee\x45\xa9\xcd\x85\xc3\xc3\x4f\x5d\xaa\x1a\xbe\xa9\x33\x7c\xc7\x52\xd8\x87\x08\x76\x72\xb5\x47\xab\x50\x5b\x52\x6e\x9b\xc0\x35\x49\x4a\xa1\xed\x70\x4a\x0b\xe7\x3b\x3c\xdb\xde\xdb\x23\x93\xa3\xec\x25\xdf\xa1\x25\x65\xe9\x2e\xd6\x6d\x7c\xfa\xfd\xf1\x48\xa2\x48\xdb\xc5\xa4\xa5\xca\x85\x8b\x97\xe3\x2a\x58\xb2\xff\x42\xd8\x90\x63\x3f\x68\xd9\xca\x4f\xda\x73\xec\x8d\xae\xd5\xbb\x7a\x31\xc6\xd8\x86\xc5\x3d\xe6\x13\xe4\x88\xc7\x52\xb8\x63\xfd\x7e\xa3\xf5\x83\xc7\xfa\xad\xe7\xa3\x4f\xce\x8c\x00\x9f\x5f\xfd\xf9\x28\x40\xdf\xcb\x77\x86\xac\x87\x24\x51\x8c\x20\x37\x9e\xe4\x90\xa3\x14\xa4\x46\x31\x2f\x1b\x7f\x7c\xcc\x9f\x00\x00\x00\xff\xff\xe8\xd1\xa2\xbc\x21\x06\x00\x00"),
		},
		"/static/img": &vfsgen۰DirInfo{
			name:    "img",
			modTime: time.Date(2020, 8, 25, 3, 8, 47, 950800537, time.UTC),
		},
		"/static/img/.DS_Store": &vfsgen۰CompressedFileInfo{
			name:             ".DS_Store",
			modTime:          time.Date(2020, 8, 25, 3, 8, 47, 951499087, time.UTC),
			uncompressedSize: 6148,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x98\x31\xaa\xc3\x30\x10\x44\x67\xf4\x5d\x18\x7e\xa3\x32\xa5\x9a\x1c\x20\x37\x10\xc6\x39\x41\x2e\x90\x22\x57\x48\xaf\xa3\x07\xb3\x03\x11\x89\x92\xda\x84\x79\x60\x9e\xc0\x96\x0d\x36\xec\xee\x18\x00\x97\xfb\xed\x04\x64\x00\x33\xc2\x38\x62\xc8\xac\xe3\x8d\xd4\xad\xa9\x7b\x18\x63\x8c\x31\x66\xdf\x50\xfd\xfd\xdf\xaf\xc2\x18\x33\xa8\x0f\x45\xae\x72\x0b\x53\xe7\x93\x3c\xbd\xe6\x00\xc6\xd6\xcd\x55\x6e\x61\xea\xba\x24\x4f\xf2\x2c\x67\xb9\xc8\x55\x6e\x61\x15\x2d\x2a\x7c\x50\x4f\xa6\x12\x0a\x95\x42\x58\xe4\xea\xef\x68\xcc\x88\xbf\x50\xde\xfa\xff\xf9\x73\xfe\x37\xc6\xfc\x72\x9f\x9f\xd6\xcb\xba\x3c\x03\xc1\x70\x10\xb8\x76\xeb\x6f\x43\x40\x8a\x9f\x85\x87\x6e\xaf\x07\x01\x63\x76\xc6\x23\x00\x00\xff\xff\x6a\x00\x88\x6d\x04\x18\x00\x00"),
		},
		"/static/img/favicon.ico": &vfsgen۰CompressedFileInfo{
			name:             "favicon.ico",
			modTime:          time.Date(2020, 8, 25, 3, 8, 4, 226792852, time.UTC),
			uncompressedSize: 1406,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\xc9\xa1\x0d\x80\x40\x10\x44\xd1\xb7\x82\x04\x79\x0a\x8d\xa4\x34\xfa\x6f\x60\xc9\x01\x09\x1a\x3f\x4f\x4d\xe6\x53\xca\x18\x6e\xe7\xc2\x86\x03\xf3\xda\xcd\xbe\x3e\xb1\x7c\xde\xdd\xdd\x22\x22\xe2\xbf\x2b\x00\x00\xff\xff\xe1\xe9\x47\x67\x7e\x05\x00\x00"),
		},
		"/static/js": &vfsgen۰DirInfo{
			name:    "js",
			modTime: time.Date(2020, 8, 25, 3, 14, 28, 548275421, time.UTC),
		},
		"/static/js/main.js": &vfsgen۰FileInfo{
			name:    "main.js",
			modTime: time.Date(2020, 8, 25, 3, 6, 47, 323263916, time.UTC),
			content: []byte("\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x61\x64\x64\x45\x76\x65\x6e\x74\x4c\x69\x73\x74\x65\x6e\x65\x72\x28\x27\x44\x4f\x4d\x43\x6f\x6e\x74\x65\x6e\x74\x4c\x6f\x61\x64\x65\x64\x27\x2c\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x28\x29\x20\x7b\x0a\x20\x20\x20\x20\x42\x75\x6c\x6d\x61\x54\x61\x67\x73\x49\x6e\x70\x75\x74\x2e\x61\x74\x74\x61\x63\x68\x28\x29\x3b\x0a\x7d\x29\x3b\x0a"),
		},
		"/templates": &vfsgen۰DirInfo{
			name:    "templates",
			modTime: time.Date(2020, 9, 14, 0, 5, 1, 848079995, time.UTC),
		},
		"/templates/base.layout.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "base.layout.tmpl",
			modTime:          time.Date(2020, 9, 14, 0, 5, 1, 848331325, time.UTC),
			uncompressedSize: 2775,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xb4\x56\x4b\xb3\xdb\x36\x0f\xdd\xfb\x57\xe0\xe3\xe2\x73\x17\x91\x94\x74\xd5\x87\xa4\xc9\x63\x9a\xe9\x22\xd3\x76\x9a\x74\xd1\x25\x2c\xc2\x12\x7c\x29\x52\x43\x42\xbe\xf7\x8e\x46\xff\xbd\xa3\xd7\xb5\xfc\xb8\x49\x27\x6d\xbd\xb1\x48\x82\x87\x07\x07\x00\x89\xae\xd3\xb4\x67\x4b\xa0\x76\x18\x48\xf5\xfd\x26\xfd\x9f\x76\x85\x3c\x36\x04\x95\xd4\x26\xdf\xa4\xc3\x1f\x18\xb4\x65\xa6\xc8\xaa\x7c\x03\x90\x56\x84\x7a\xf8\x00\x48\x6b\x12\x84\xa2\x42\x1f\x48\x32\xd5\xca\x3e\xfa\x4e\xad\x97\x2c\xd6\x94\xa9\x23\xd3\x7d\xe3\xbc\x28\x28\x9c\x15\xb2\x92\xa9\x7b\xd6\x52\x65\x9a\x8e\x5c\x50\x34\x0e\x5e\x00\x5b\x16\x46\x13\x85\x02\x0d\x65\xaf\x5e\x40\xa8\x3c\xdb\xbb\x48\x5c\xb4\x67\xc9\xac\x5b\xa0\x85\xc5\x50\xde\x75\x42\x75\x63\x50\x08\xd4\x38\xa3\x20\xee\x7b\x88\xe0\x1d\x7a\x8d\xb5\xab\xd3\x64\x32\x9c\x36\x19\xb6\x77\xe0\xc9\x64\xdb\x50\x39\x2f\x45\x2b\xc0\x85\xb3\x5b\xa8\x3c\xed\xb3\x6d\x12\x04\x85\x8b\x84\xeb\x32\xd9\xe3\x71\x58\x8a\xb9\x70\x5b\x18\xc4\xc8\xb6\x5c\x63\x49\xc9\x43\x34\x6e\xb9\x44\x54\x41\x1e\x0d\x85\x8a\x48\xd4\x04\xa7\x2a\x91\x26\xfc\x90\x24\x85\xb6\xf1\x21\x68\x32\x7c\xf4\xb1\x25\x49\x6c\x53\x27\xbb\xd6\xd4\xf8\xfa\x65\xfc\x7d\xfc\x32\x29\x42\x98\xc6\x71\xcd\x36\x2e\x42\x50\xff\x14\xfd\x75\xe1\x09\x85\x8f\x34\xc2\x4e\xe0\x91\x60\x19\xd8\x36\xad\xbc\x7e\x15\xbf\x8c\xbf\x4d\x34\x07\x39\x9d\x7d\x5a\x7e\x96\xc5\xf6\xc4\xe2\x52\xb2\x01\xa6\xc6\x69\xdf\xa8\x4d\x9a\x2c\x29\x92\xee\x9c\x7e\x9c\xa1\x2c\x1e\xa1\x30\x18\x42\xa6\x2c\x1e\x77\xe8\x81\x43\x14\x1a\x2c\x48\x2b\xf0\xce\xd0\x38\xcf\x25\x0a\x3b\xab\x00\x3d\x63\x64\x70\x37\x28\x30\xa0\xc3\x6a\x71\x42\x04\x48\x35\x5f\x60\x46\x3b\x8f\x56\x3f\x19\x00\xa4\x78\x61\xc0\x42\xf5\xa2\x63\xa2\xf2\x34\x88\x77\xb6\xcc\x4f\x49\x33\x4f\xa4\x09\xe6\x9b\x35\xcc\x44\x71\xd7\x8a\x0c\xf4\x2e\x4e\x6d\x7d\x49\x1e\xa6\xbf\x0b\xee\x64\xdb\x79\x86\x1e\x1a\xb4\x9a\x74\xa6\xf6\x68\x02\x29\xd0\x28\x83\xf6\xbe\x1c\xaa\x67\x82\x7a\x8b\x81\x8b\x9f\x1e\xb0\x6e\x0c\xad\xdc\x00\x48\x43\x83\x76\xc2\xa9\x58\x6b\xb2\x99\x12\xdf\x92\xca\xd3\x64\x58\xf9\xaf\x4d\x47\x39\x96\x4f\xcd\xc7\x27\x6d\x6e\xc4\x60\x74\x79\xb5\xf5\xda\x22\x08\x7a\x39\x77\xef\x0b\x71\xfa\xd9\xd5\xb4\xe2\x30\xfc\xba\x8e\xf7\x10\xbf\x69\xa5\x22\x2b\x5c\xa0\x90\xfe\x23\x90\xef\xfb\x95\xcd\x97\x80\xb1\x69\x92\x9d\x73\x77\x35\xfa\xbb\x64\x2c\x1c\x52\xf9\x1b\xad\xe1\xed\x3c\x79\x71\xe6\xdf\xc1\x13\x2c\x55\xfe\x09\xcb\x70\xc5\x97\xac\x5e\xb1\x3b\xd7\xf1\xa6\x4e\x74\x96\xcb\x37\x4d\xc6\xe3\xbf\x42\x96\x15\xd2\x94\xd3\x41\x9d\x3b\x0a\x90\xee\x9d\xaf\x17\xa3\xe1\x3b\x62\x6b\xd8\x92\x02\x2c\x86\x3a\xcc\xb6\xa3\xbf\x6d\x20\x9f\x18\x57\xba\x56\xb6\x50\x93\x54\x4e\x67\xdb\xdf\x7e\xfd\xf8\x69\x7b\x09\x38\xd1\x83\xf8\xdd\xc7\xdf\xdf\xbf\x67\x32\x1a\x2e\x58\xcd\xe7\x8e\x57\xd1\x39\xbb\xe1\xb2\x68\x3c\xd7\xe8\x1f\xd5\x74\x27\xab\xd0\xee\x6a\x16\x05\x47\x34\x2d\x65\xea\xc3\xc8\x00\xbe\xe9\xba\x6b\xe7\xe3\x5f\xb0\xa6\xbe\xbf\xf6\x30\x19\xdc\xba\x08\xf0\x14\x96\xb3\xb8\x99\x40\x5f\xa3\x1f\x7e\xc6\x87\x39\x61\x02\x97\xb6\x6d\x54\x0e\xcb\x45\xf4\x91\x4b\x0b\x6d\xf3\x74\x0f\xc1\x55\x06\xde\x06\x36\x5c\x56\x4f\x0f\xc4\x10\x0e\xb6\x2a\x87\x0f\xae\x04\xb6\xd7\x18\xb7\x9c\x3c\x4b\xce\x2b\x93\xb3\xe1\x6a\x90\x26\x16\x97\xcf\x40\x63\x5e\x2c\xe4\xe6\xe1\xcd\xeb\x7a\xe8\x04\x90\x2d\x79\x50\xab\x12\xe8\xba\x7b\x96\x0a\xe2\xf7\x06\x43\xb5\x2e\x15\xf4\xc2\x85\xa1\x65\x77\x4d\x21\x60\x49\xcf\xd6\xc6\xbc\x1e\x0d\xcf\x8f\xca\xbb\x2e\xee\xfb\x2b\x77\x66\xc8\x7c\x73\x29\xc1\x6a\xe2\xd4\x61\xcc\x9d\xcb\xd8\x63\x6c\x6e\xa9\x30\x3b\x3b\x0f\xf7\xce\x09\xf9\x53\xed\x0c\xa3\x67\x75\x20\x2b\x50\x61\x88\x84\x1e\x24\x2a\xc8\x0a\x79\x3a\x7b\xc3\x9a\xfc\xff\x85\x6b\x1e\x7f\xec\xba\xf8\x5d\xeb\x3d\x59\xf9\x93\xd0\xf7\x3d\x7c\xe6\xf5\x6a\x6e\xc6\x6a\x62\xb2\x84\xab\xf0\xdc\x08\x04\x5f\xfc\x6b\x2d\xc5\xe1\x76\x47\x71\x08\xe3\x8b\x32\x9e\x77\xe3\xf0\xa5\x93\x38\xcc\x8d\xc4\x21\x2c\x35\x3e\x48\x92\x1c\xf0\x88\x93\xf9\x39\x4a\x9a\x4c\xed\x45\x9a\x4c\xcd\xea\x12\xc0\xbf\x02\x00\x00\xff\xff\xa2\x1b\xac\x73\xd7\x0a\x00\x00"),
		},
		"/templates/create.page.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "create.page.tmpl",
			modTime:          time.Date(2020, 8, 25, 3, 6, 47, 323864653, time.UTC),
			uncompressedSize: 1041,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xc4\x53\xc1\x8a\xdb\x30\x10\xbd\xfb\x2b\x86\xb9\xe4\xe4\x98\xdc\x6d\x43\xbb\x34\xbd\x14\x5a\x76\xb7\x1f\xa0\x58\x93\x5a\xac\x2c\x05\x69\x94\x6d\x11\xfa\xf7\x22\x27\xf2\x3a\xa1\x85\x52\x0a\xcd\x25\x9e\x79\xe3\xf7\xde\x3c\x33\x31\x4a\x3a\x2a\x43\x80\xac\x58\x13\xa6\xf4\x4e\x4a\x10\x60\xe8\x15\x0e\xd6\xbe\x4c\xc2\xbd\xc4\x48\x46\xa6\x54\x55\x6f\xc3\x83\x35\x4c\x86\x31\xa5\xaa\x95\xea\x0c\x83\x16\xde\x77\x38\x58\x1d\x26\xe3\xb1\xff\x45\x17\x94\xaf\xad\xa1\x9a\x47\xe5\x64\x9e\x18\x77\x65\x60\x96\xce\xf8\x0e\xfb\x2c\xff\xfe\x2a\xdc\x36\xe3\xae\xaf\x00\xda\xa3\x75\x13\x28\xd9\x61\xb1\x54\x0f\x8e\x04\x13\x82\x18\x58\x59\xd3\x6d\x1a\x71\x3a\x35\x05\x6d\x2e\xe8\x06\x26\xe2\xd1\xca\x6e\xf3\xe5\xf3\xd3\xf3\x26\x33\xe5\x5f\x8c\xb0\x7d\x78\x7a\xdc\xef\x15\x69\x09\x29\x2d\xed\x57\xc5\x23\x6c\xf7\xd6\x4d\x4b\x13\x60\xbd\xc8\x31\xbf\x81\xfd\x82\x01\xb4\x5a\x1c\x48\x17\x7c\x2e\xb0\x7f\xce\xeb\xb4\xcd\x5c\xad\x87\x8b\xc2\x07\xe7\xac\xf3\xdb\x8f\xc4\x6f\xa9\xaf\xc6\xee\x55\x47\xe1\x6b\xa6\xef\x5c\x4b\x61\xbe\x91\xc3\x3e\xc6\x6d\x4a\x6d\x23\xd5\xf9\x96\xfd\xf2\x95\x56\x24\xca\x9c\x02\x17\x9a\xb9\x40\xe0\x1f\x27\xea\x30\xf3\x21\x18\x31\xd1\x35\x7d\x84\xb3\xd0\x81\x3a\x8c\xf1\xd6\x18\x82\x08\x6c\x8f\x76\x08\xbe\xc3\xe5\x71\x15\xc2\x9d\x91\xbf\xc8\xeb\xeb\xe3\xa7\x3f\x4c\x2b\x38\xfd\x7f\xb3\xca\x06\xee\x93\xba\x98\xfa\xc7\x39\xdd\xd8\x39\x04\x66\x3b\x1f\x90\x0f\xc3\x40\xde\x17\x6b\x3e\x1c\x26\xc5\x8b\xa3\x87\xcb\x51\xfc\x46\xb3\x2c\xdd\x36\xf9\x9c\xfa\xea\x0a\x5e\xff\x0a\xfa\x33\x00\x00\xff\xff\x87\x4c\x2f\x68\x11\x04\x00\x00"),
		},
		"/templates/create_tag.page.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "create_tag.page.tmpl",
			modTime:          time.Date(2020, 8, 25, 3, 6, 47, 324092983, time.UTC),
			uncompressedSize: 747,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x6c\x52\xc1\x8e\x9b\x30\x10\xbd\xf3\x15\xa3\xb9\xe4\x94\xa0\xdc\xc1\x52\xb5\x6a\x7a\x6b\xab\xee\xfe\x80\x63\x0f\x60\x09\xec\xc8\x1e\x67\x5b\x59\xfe\xf7\xca\x10\x76\x59\x14\x0e\x98\x79\x7e\xe6\xbd\x37\x9e\x94\x34\x75\xc6\x12\x20\x1b\x1e\x09\x73\xfe\xa6\x35\x48\xb0\xf4\x0e\x2c\xfb\x94\xc8\xea\x9c\xab\xea\x93\xa7\x9c\x65\xb2\x8c\x39\x57\x8d\x36\x77\x50\xa3\x0c\xa1\x45\xe5\xc6\x38\xd9\x80\xe2\x09\x0a\x26\x1c\x9d\xa5\x23\x0f\xc6\xeb\xc2\x18\xce\x2b\x61\x56\x2d\xfb\x67\x14\x45\xf9\x4d\xf6\x4d\x3d\x9c\x45\xd5\x74\xce\x4f\x60\x74\x8b\x2c\xfb\xa3\xf2\x24\x99\x10\xa4\x62\xe3\x6c\x7b\xa8\xe5\xed\x56\xb3\xec\xeb\x65\xe3\x00\x13\xf1\xe0\x74\x7b\xf8\xfd\xeb\xf5\xed\x20\x2a\x00\x80\x94\xe0\xf4\xf2\xfa\xe7\x72\x31\x34\x6a\xc8\xf9\x01\xbe\x1b\x1e\xe0\x74\x71\x7e\x7a\x40\x5b\xf8\xbb\xf7\xce\x87\xd3\x0f\x62\xc0\x9e\x2c\x79\xa3\x70\x43\x2b\xcf\x36\x9e\x75\x6c\x3a\xa3\x64\x31\x55\x42\x68\x69\x7b\xf2\x28\xbe\x1c\x00\x68\xae\x91\xd9\xd9\xf5\x94\xa6\x91\x98\x50\x34\xf5\x82\xef\xe9\x29\x9d\xf6\x9a\xb5\x36\x77\xb1\x71\xbb\xdc\xca\x33\x4b\x5d\x49\xbb\x73\xd0\x8c\xf2\x4a\xe3\xca\x98\x0b\x14\x3f\xe5\x44\x4d\x3d\x17\x3b\xb6\xb1\xb7\xc8\x2b\x7b\x2e\x10\xf8\xdf\x8d\x5a\x64\xfa\xcb\x08\x56\x4e\xd4\x62\x79\x23\xdc\xe5\x18\xa9\xc5\x94\x96\x9e\xcd\x60\xce\x08\x32\xb2\xeb\x9c\x8a\xa1\xc5\x8f\xcf\x8d\xab\x4d\xa0\x6d\x98\xaf\xd2\x8f\xae\x99\x70\x0c\x51\x29\x0a\x61\xb5\x11\xe2\x75\x32\xfc\x21\xfe\xb2\x0c\x87\xa8\x9a\xba\x0c\x4d\x59\xe7\xbf\x3f\x96\x55\xe0\x7f\x00\x00\x00\xff\xff\xee\x06\xc7\xd9\xeb\x02\x00\x00"),
		},
		"/templates/edit.page.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "edit.page.tmpl",
			modTime:          time.Date(2020, 8, 25, 3, 6, 47, 325281349, time.UTC),
			uncompressedSize: 1550,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xc4\x54\x4d\x8f\x9b\x30\x10\xbd\xf3\x2b\x46\x56\x24\x4e\x21\xf7\x15\x70\xe8\xb6\x5b\x55\x5a\x69\xab\x4d\xd2\xbb\x83\x87\x60\xad\xb1\x91\x6d\xd2\x56\x96\xff\x7b\x65\x30\x04\x92\x3d\xb4\x95\xaa\x9e\xc0\xe3\xf9\x7a\xef\x8d\xc7\x39\x86\x35\x97\x08\xc4\x72\x2b\x90\x78\xef\x5c\xb6\xe7\x16\x0f\xe1\xe8\xfd\x03\x38\x97\x7d\x50\xea\xad\xa5\xfa\x2d\x8b\x46\xe7\x50\x32\xef\x93\xe4\x1a\x5d\x29\x69\x51\x5a\xe2\x7d\xe2\xdc\x77\x6e\x1b\xd8\x9c\x62\x14\x3c\x14\x30\xa7\xf0\x3e\x01\x00\xc8\x6b\xa5\x5b\xa8\x04\x35\xa6\x20\x04\x38\x2b\xc8\xe4\xbe\x45\xc6\x2d\x81\x16\x6d\xa3\x58\x91\x7e\x7d\xd9\x1f\xd2\x72\x08\x72\x0e\x36\xd9\xe3\xfe\xf5\xe9\x89\xa3\x60\x10\x53\x4d\xe5\xb2\x27\xa5\xdb\x68\x9b\xad\xd9\x27\xad\x95\x36\xd9\x67\xb4\x40\xce\x28\x51\xf3\x8a\xcc\x4e\x00\x39\xe3\x97\xa9\x0d\xa9\x2c\xaf\x79\x45\x2d\x57\x12\xb8\xd9\x32\x2a\xcf\xa8\x49\x39\x3b\x03\xe4\xa7\xde\x5a\x25\xa7\x08\x86\x02\x2d\x92\x32\xdf\x8d\xf6\xa5\xab\x73\xd9\xb2\xce\x8e\xf1\x4b\x39\xf7\x36\xd2\x17\xaf\xb8\xec\x7a\x0b\xf6\x67\x87\x45\xda\x70\xc6\x50\xa6\x20\x69\x8b\x45\xca\x59\x0a\x17\x2a\x7a\x2c\x52\xe7\x36\x57\x19\xbe\x7c\xf4\x3e\x2d\x93\xe4\x1e\x43\x1d\x98\x59\xb4\x9c\x0b\x7a\x42\x31\xdd\x0e\x07\x52\x0e\x2a\xe6\xbb\xe1\x74\x75\x7d\x8f\xb1\x69\x26\x16\xb8\xd6\xf5\x1a\x6a\xb6\x16\x7f\xd8\x99\xac\x01\xf6\x0a\xed\x2d\xde\x19\x71\x4c\x31\x1c\xc8\x88\x9f\x84\x5c\x64\x44\x1f\x8b\x47\x02\xc8\x8a\x80\x38\x87\x04\x68\x6f\x55\xad\xaa\xde\x14\x64\xfe\x9d\xe1\xc7\x36\xfe\x96\xa6\xe3\xeb\xf3\x6f\x91\xd4\x6b\xf1\xbf\x28\x0a\xa5\xdf\x25\xe8\xf8\xfa\xfc\xaf\xe9\x39\xd0\xb3\xb9\xe3\x67\x9d\x27\x2c\x05\xad\xc4\xea\x09\x01\xe4\x06\x05\x56\x16\xda\x5e\x58\xde\x09\x9c\xe4\xa6\x67\x43\x80\x51\x4b\xb7\x11\xe8\xd5\xd0\x09\x5a\x61\xa3\x04\x43\x5d\x90\xc7\x46\x29\x83\x10\xea\xdf\x64\x0e\x3c\xea\xc0\x32\x6c\xb2\x97\x2e\xbc\x63\x73\x23\x0c\x40\xae\x86\x0b\x70\x8e\xd7\x90\xed\x87\x56\x90\x79\x6f\xe2\x5f\x54\x22\xa8\xf4\x2d\x10\x1b\xa4\x1a\x43\xee\x6b\xad\x35\x1b\x39\x1d\xf3\xac\x18\x59\x4a\xfd\x07\xa4\xaf\x46\x20\x2e\x1e\x6e\xb6\xa6\xaf\x2a\x34\x66\x1a\x07\xd3\x9f\xda\xb0\x2f\xe3\x14\x1c\x3b\x46\xc3\x4a\x4a\xee\x6a\x2f\xdb\xcd\x77\x61\xff\x96\xc9\x64\x9b\xbe\xbf\x02\x00\x00\xff\xff\x69\x5e\xd4\x04\x0e\x06\x00\x00"),
		},
		"/templates/home.page.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "home.page.tmpl",
			modTime:          time.Date(2020, 9, 8, 0, 29, 2, 324668306, time.UTC),
			uncompressedSize: 819,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x6c\x52\x4d\x8f\xd4\x30\x0c\xbd\xcf\xaf\xb0\x72\xe1\xd4\xf6\x0f\x74\x2a\xc1\xee\x01\x24\x4e\xb0\x70\x45\x9e\xc6\x9d\x5a\x93\x26\xa3\xd4\x2c\x42\x21\xff\x1d\xa5\x9f\xe9\xce\xf6\xd2\xd8\xcf\x4f\x7e\xef\x25\x21\x68\xea\xd8\x12\x28\x61\x31\xa4\x62\x0c\xa1\xfc\xce\x42\x2f\xa9\x8c\x11\x0a\xf8\xec\x06\x0a\x81\xac\x8e\xf1\x74\xda\xe7\x5b\x67\x85\xac\xa8\x18\x4f\x00\x21\x70\x07\xe5\x27\xe7\x6e\x03\xfa\xdb\x38\xf5\xd2\x17\x82\x47\x7b\xa5\x47\xa8\xd6\xfc\x0a\xad\xc1\x71\x3c\xab\x16\xbd\x56\xcd\xc2\xa8\x7b\x42\x4d\x3e\xc7\x8a\xb9\xb5\x8d\x00\xd4\xf7\x77\xf0\x62\x76\xb0\x4f\x01\xd4\x08\xbd\xa7\xee\xac\x42\x28\x7f\x7c\xfb\x1a\xa3\x02\x41\x7f\x25\x39\xab\x5f\x17\x83\xf6\xa6\x00\x8d\x4c\xf0\xe2\x57\x35\xfb\xb9\xae\x30\x5b\x59\xdd\x37\x89\xd5\xbc\x70\xab\xdf\x78\x29\xd6\x68\x32\x76\x3e\xf2\x80\xa6\x9c\xca\xa7\xb9\xbd\x45\x37\xd1\x2e\xfe\x60\x47\x78\x20\xd0\x28\x94\x0e\x93\xec\x27\x4f\x28\xa4\x3f\xca\x22\x7d\xab\xe1\x1f\xf4\xbf\x07\xb4\xcf\x28\x93\x95\xc4\xc8\xdd\x68\x7e\xdd\xfd\xe4\x45\xe7\x9c\xbc\xc9\x7f\x6e\xe5\x76\xd6\x5c\x2b\xbc\xdf\xab\xcb\x72\xb7\x55\x08\xe5\x97\xe7\x14\xf2\x23\xb9\x60\xa1\x41\x35\x3f\x99\xfe\x64\xb1\xd6\xd5\x8c\xce\xf5\x41\xc7\xfa\xe2\xa6\x93\x19\x69\xcb\xa5\x46\x2f\xdc\x1a\x5a\x97\x08\x1b\x02\x1e\x8b\xb6\x67\xa3\xc1\x3a\xe1\x8e\x5b\x14\x76\xf6\xf0\x60\x9a\x97\x9e\x3c\x7d\x18\xd3\x44\xcf\xf6\x0a\xe2\x60\x24\x82\xd4\x2d\xcb\xf2\x2f\xc9\xe1\x86\x97\x25\xcd\x69\x57\xb2\xfe\xff\x07\x00\x00\xff\xff\xea\x52\x5c\xc5\x33\x03\x00\x00"),
		},
		"/templates/login.page.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "login.page.tmpl",
			modTime:          time.Date(2020, 8, 25, 3, 6, 47, 324522459, time.UTC),
			uncompressedSize: 951,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x9c\x52\xcb\x8e\xdb\x30\x0c\xbc\xfb\x2b\x08\xde\x13\x23\x77\xdb\x97\x62\xd3\x4b\x81\x2e\xba\xfd\x01\xc5\xa2\x63\x02\xb2\x14\x58\x54\x16\x85\xa0\x7f\x2f\xfc\xd0\xc6\x2e\x72\x69\x4e\xf6\x0c\x87\xe0\x8c\xc8\x18\x35\x75\x6c\x09\x50\x58\x0c\x61\x4a\x3f\xdc\x95\x6d\x8c\x64\x75\x4a\x45\xf1\xa8\xb7\xce\x0a\x59\xc1\x94\x8a\x4a\xf3\x1d\x5a\xa3\xbc\xaf\xb1\x75\x26\x0c\xd6\x63\xf3\x84\x05\xf6\x07\x67\xe9\x20\x3d\x8f\x7a\x06\x5d\xe7\x49\x1e\xdc\xd4\xd5\x9f\x72\xd3\xec\x60\x92\x9d\xb0\x99\x5d\x54\x65\x7f\x6a\x8a\xaa\x73\xe3\x90\x35\x2a\x48\x8f\xa0\x5a\x61\x67\x6b\x2c\xcd\x24\x43\x18\x48\x7a\xa7\x6b\x7c\xff\xf9\xf1\x1b\xc1\xba\xbb\x32\xac\x95\x50\x53\x00\x00\xc4\x08\xc7\x6f\x1f\xbf\xce\x67\x26\xa3\x21\xa5\x95\xfc\x64\xe9\xe1\x78\x76\xe3\xb0\x52\x5b\xfa\x6d\x1c\xdd\xe8\x8f\xdf\x49\x00\xaf\x64\x69\xe4\x16\x37\x32\x80\x6d\x5a\xeb\x84\x3b\x6e\xd5\x64\x6a\xf2\xaf\x95\xbd\xd2\x88\xcd\x46\x0e\x50\x5d\x82\x88\xb3\xb9\x47\x93\x21\x21\x6c\xaa\x72\xe1\xf7\xe2\x18\x8f\xfb\x69\xa5\xe6\x7b\xb3\x71\xb9\xac\xe7\x99\x99\x6e\x4a\xb9\x9b\x5d\x19\x75\x21\x93\xeb\x33\xc0\xe6\x6d\x50\x6c\xaa\x72\x46\x3b\x31\xdb\x5b\x90\x2c\x9e\x01\x82\xfc\xb9\x51\x8d\x34\xb5\x20\x58\x35\x3c\xc0\x5d\x99\x40\x35\xc6\xb8\x3c\xd5\xc2\xa6\x84\xa0\x82\xb8\xce\xb5\x61\xd9\xd9\xf2\xbb\x71\xf5\x4f\xa0\x17\x02\xbc\x2b\xef\x3f\xdd\xa8\xff\x2f\xc3\x6d\xed\xca\x31\xbe\xf0\xab\xd6\x76\xa3\xd6\x15\xb3\x3f\xf8\xd0\xb6\xe4\x7d\x1e\xeb\xc3\x65\x60\xf9\x7a\xae\xf9\xba\x9f\x8f\xcc\xab\xad\xca\xe9\xec\x9b\x62\x2d\xad\x9f\x5c\xfd\x1b\x00\x00\xff\xff\xbf\x41\xe7\x84\xb7\x03\x00\x00"),
		},
		"/templates/show.page.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "show.page.tmpl",
			modTime:          time.Date(2020, 9, 8, 0, 29, 2, 324930980, time.UTC),
			uncompressedSize: 764,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x7c\x52\xbb\x6e\xc3\x30\x0c\xdc\xfd\x15\x84\x3a\xdb\xda\x0b\xd9\x40\x9b\x74\x28\xd0\xa9\x8f\xb9\x50\x2c\xa6\x16\xe2\x17\x1c\x36\x1d\x58\xfe\x7b\x61\x5b\x7e\xe4\x81\x6e\xe2\x1d\x8f\xe2\x9d\xc4\xec\x70\xef\x6b\x04\x45\x9e\x4a\x54\x22\xcc\xc9\x9b\x27\x7c\xef\x4b\x91\x7b\x60\x4e\x1e\x9b\xe6\x50\xd9\xee\x90\x04\x90\x19\x6b\x27\x12\x45\x8b\x3a\x6f\x6a\xc2\x9a\x94\x48\x64\x8e\x98\x93\x6f\x6a\xf0\x2e\x9d\xf1\x2c\x02\x00\x60\xfe\xf1\x54\xc0\x3c\x50\x64\x80\x8d\xf3\x27\xc8\x4b\x7b\x3c\xa6\x2a\xb7\x9d\x0b\xdd\x00\xa6\x40\xeb\xb0\x5b\x73\xf1\x08\xcd\x2d\x00\xa6\xbd\xc1\xc7\xa3\x9d\xa5\x0b\xc0\x58\x28\x3a\xdc\xa7\x8a\x39\xf9\x78\x7d\x11\x51\x40\xb6\xfb\x42\x4a\xd5\xe7\xae\xb4\xf5\x41\x81\x2d\x69\xa0\x83\x4f\x95\x2d\x67\xa3\xed\xea\x4a\xdd\xce\x2b\xea\xf1\xc2\xb9\xbe\xf0\x12\x9f\x27\x70\xd5\x72\xc5\xf6\x29\x25\x9b\x11\x0e\xf9\x04\xd9\xae\x3b\xb3\x43\xbe\x42\x70\x96\xb0\x3f\x0c\x6b\x6f\x3a\xb4\x84\xee\x81\xc2\xea\x73\x0d\xbf\x50\x7c\x57\xb6\xde\x5a\x1a\xac\xf4\x8a\xb5\x1b\xe7\x4f\x8b\x9f\x75\xb1\x6f\x1a\xba\xc8\x7f\x84\xd6\x76\xa6\x5c\xb5\x6d\x5b\xbd\x0b\x4f\xab\x99\x93\xe7\xad\x88\x46\xe7\x49\xdd\x98\x10\x7b\xc2\x4a\x65\x4f\xce\xd3\x79\xb6\xd3\xb8\xbb\x7f\x54\x5b\x2c\x91\x70\xa5\x33\x7a\xe4\xc7\x7a\x65\x62\xfa\xab\x46\x87\x6f\x99\x45\x13\xf4\x17\x00\x00\xff\xff\x6c\x1a\xdd\x54\xfc\x02\x00\x00"),
		},
		"/templates/signup.page.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "signup.page.tmpl",
			modTime:          time.Date(2020, 8, 25, 3, 6, 47, 324998537, time.UTC),
			uncompressedSize: 1399,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xc4\x94\xc1\x6e\xdb\x30\x0c\x86\xef\x7e\x0a\x42\x97\x9c\x12\x23\x77\x5b\x97\xa1\xd9\x65\xd8\x8a\x65\x2f\xa0\x58\x74\x2c\x40\x96\x32\x89\x4a\x37\x08\x7a\xf7\xc1\xb2\x9d\x3a\x85\x5b\x74\xc3\x80\x9e\x6c\x92\x3f\xc9\x5f\x9f\x00\xc5\x28\xb1\x55\x06\x81\x91\x22\x8d\x2c\xa5\xa3\x3a\x9b\x70\x89\x11\x8d\x4c\xa9\x28\x9e\x05\x8d\x35\x84\x86\x58\x4a\x45\x25\xd5\x15\x1a\x2d\xbc\xaf\x59\x63\x75\xe8\x8d\x67\x7c\x25\x0b\xca\x6f\xad\xc1\xed\xcf\x20\x1c\xa1\xcb\x61\xdb\x7a\xa4\x9c\xa5\x4e\x39\x39\xf4\x75\xfb\xb9\x2d\x9b\x18\x64\x7b\xc6\x47\x23\x55\xd9\xed\x79\x51\xb5\xd6\xf5\xb3\x48\x04\xea\x18\x88\x86\x94\x35\xf5\xa6\xf4\x59\xb7\x81\x1e\xa9\xb3\xb2\xde\x3c\x7e\x3b\xfe\xd8\x80\xb1\x57\xa1\x95\x14\x84\xbc\x00\x00\x88\x11\x76\x9f\x8e\xdf\x0f\x07\x85\x5a\x42\x4a\x53\xf2\x49\x51\x07\xbb\x83\x75\xfd\x94\x5a\xa6\x1f\x9c\xb3\xce\xef\x3e\x23\x01\x3b\xa3\x41\xa7\x1a\xb6\x90\x2d\xcf\x8b\x83\x94\xf1\x18\x77\x29\x55\xa5\x54\x57\xbe\x98\x36\xa2\x5c\x6b\x6b\x07\x37\xec\x59\x9b\xeb\x5a\x9c\x50\xcf\x8a\x1c\x30\xfe\x55\xf4\x58\x95\x39\xb8\x57\xaf\x79\x35\xa2\xc7\xa5\xd1\xb5\xcd\x9d\xf0\x5b\xc2\x5f\xb4\x95\xc2\x9c\xf1\x15\xeb\x6b\xf6\xf3\x20\x65\x2e\x81\xe6\x51\x39\x60\x40\xbf\x2f\x58\xb3\x61\x26\x83\xc1\x41\x3d\xfa\x80\xab\xd0\x01\x6b\x16\xe3\x9d\x39\x06\x22\x90\x6d\x6d\x13\xc6\x1b\x1d\x7f\x17\x28\x5e\x58\xf9\x27\x6a\x0f\xbd\x50\xfa\xdd\xd8\x70\x50\xaf\x72\xbb\x9b\xfd\x1a\xb9\xd5\x2d\x7f\xc5\x6e\x34\x30\xc1\x9b\x82\x17\xf4\x66\x8f\xff\x19\xd4\xa3\xf0\xfe\xc9\x3a\xf9\x6e\x56\x97\xa9\xe1\x23\x71\xdd\x3c\x4c\xc4\x6e\xf1\x9b\x6c\xf8\x1b\xe3\x4f\x81\xc8\xe6\x57\xcb\x87\xa6\x41\xef\xe7\x55\x3e\x9c\x7a\x45\xb7\xdb\xf8\x62\xcf\xca\xac\xaf\x99\xcf\x50\x95\xc3\x93\xc5\x8b\xa9\x34\x7d\xe6\xea\x9f\x00\x00\x00\xff\xff\x88\x4d\x88\xbb\x77\x05\x00\x00"),
		},
		"/templates/tags.page.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "tags.page.tmpl",
			modTime:          time.Date(2020, 9, 7, 3, 22, 4, 288429916, time.UTC),
			uncompressedSize: 1059,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x53\xc1\x6e\xdb\x30\x0c\xbd\xfb\x2b\x08\xee\x90\x53\x6c\xa0\x67\x5b\x97\x62\xdd\x4e\xdb\xb0\xe6\x3e\xa8\x16\x6d\x0b\x95\x25\x43\xa2\xdb\x15\x82\xfe\x7d\x90\x9d\xd4\x4e\x5a\x60\x39\x44\xd2\xd3\xa3\xf8\xf8\x48\xc7\xa8\xa8\xd3\x96\x00\x59\xb3\x21\x4c\x29\xc6\xf2\x51\x33\x9d\xf2\x31\x25\x38\xc2\x77\x37\x52\x8c\x64\x55\x4a\x45\xb1\xf1\x5b\x67\x99\x2c\x63\x4a\x45\x3d\xdc\x41\x6b\x64\x08\xcd\xfa\x0a\xe8\x70\xbc\x43\x71\x92\x7d\xa8\xab\xe1\x4e\x14\xb5\xd2\x2f\x17\x46\xeb\xcc\x3c\xda\x80\x9f\xa1\x39\xd0\x59\x3a\xf2\xa0\xbd\xca\x8c\xce\xf9\x11\xb4\x6a\x90\x65\x7f\x6c\x3d\x49\x26\x04\xd9\xb2\x76\xb6\x39\x54\x72\x9a\x2a\x96\x7d\xb5\x5e\x1c\x60\x24\x1e\x9c\x6a\x0e\xbf\x7e\x3e\x9e\x0e\xa2\x00\x00\x88\x11\xca\xfb\xc7\xdf\x0f\x0f\x9a\x8c\x82\x94\xce\xe0\xab\xe6\x01\xca\x07\xe7\xc7\x33\xb4\x87\xbf\x7a\xef\x7c\x28\xbf\x11\x03\xf6\x64\xc9\xeb\x16\x77\xb4\xfc\xdb\x4b\xb7\x8e\x75\xa7\x5b\x99\x45\xe5\x02\x94\xb4\x3d\x79\x14\x57\x01\x00\xf5\xd3\xcc\xec\xec\x25\x4a\x91\x21\x26\x14\x75\xb5\xe2\xb7\xf4\x18\xcb\xdb\x9c\x95\xd2\x2f\x62\xa7\x76\x6d\xc9\x47\x41\xdd\x52\xeb\x20\xc3\x51\x2a\xe5\x16\xab\x3f\xd3\x9d\x1b\xe8\x9d\xb9\x12\x5a\x6b\x3b\xcd\x7c\x61\x2c\x07\x04\x7e\x9b\xa8\x41\xa6\xbf\x8c\x30\x19\xd9\xd2\xe0\x8c\x22\xdf\xe0\xfd\xe2\x3b\x58\x7a\x05\x96\x3d\x82\x95\x23\x35\x98\xff\x11\x5e\xa4\x99\xa9\xc1\x18\x57\x1f\x17\x30\x25\x04\x39\xb3\xeb\x5c\x3b\x87\x06\xdf\xb7\x7b\x81\xd7\x45\xfe\x57\xef\xd9\xd4\x55\x62\x98\x9f\x46\xcd\x78\x09\x38\xdf\xe9\x70\x34\xda\x3e\xa3\x58\xe5\x7e\x34\xfc\x2a\xe7\xee\x70\x71\xb8\xae\xf2\x18\x8a\xe2\x7c\x75\x5e\x8a\x4c\xd0\x1d\x94\x79\xcc\xdf\xfb\x10\xa3\xcf\xed\xbf\x41\xeb\xd9\xec\xd2\x19\x2d\x6a\x09\x83\xa7\xae\xc1\x2f\x08\x2c\x7d\x4f\xdc\xe0\x9f\x27\x23\xed\x33\x82\x34\xbc\xf8\xf6\x43\x8e\x94\x12\x8a\xf7\x6d\x5d\x49\x51\x57\x46\x6f\x52\xb7\x67\xb7\x69\x88\x91\x4c\xa0\x2d\xf5\x24\x4e\x03\x79\x02\xe9\x09\xac\xcb\x8d\x0a\xf0\x46\x5c\xc2\xc9\xbf\xc1\xf2\xe5\x68\xdb\x83\xb3\x54\xd6\xd5\x24\x8a\xed\xa9\xcb\xfa\x2f\x00\x00\xff\xff\xd6\x08\xb8\x65\x23\x04\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/.DS_Store"].(os.FileInfo),
		fs["/static"].(os.FileInfo),
		fs["/templates"].(os.FileInfo),
	}
	fs["/static"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/static/.DS_Store"].(os.FileInfo),
		fs["/static/css"].(os.FileInfo),
		fs["/static/img"].(os.FileInfo),
		fs["/static/js"].(os.FileInfo),
	}
	fs["/static/css"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/static/css/.DS_Store"].(os.FileInfo),
		fs["/static/css/main.css"].(os.FileInfo),
	}
	fs["/static/img"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/static/img/.DS_Store"].(os.FileInfo),
		fs["/static/img/favicon.ico"].(os.FileInfo),
	}
	fs["/static/js"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/static/js/main.js"].(os.FileInfo),
	}
	fs["/templates"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/templates/base.layout.tmpl"].(os.FileInfo),
		fs["/templates/create.page.tmpl"].(os.FileInfo),
		fs["/templates/create_tag.page.tmpl"].(os.FileInfo),
		fs["/templates/edit.page.tmpl"].(os.FileInfo),
		fs["/templates/home.page.tmpl"].(os.FileInfo),
		fs["/templates/login.page.tmpl"].(os.FileInfo),
		fs["/templates/show.page.tmpl"].(os.FileInfo),
		fs["/templates/signup.page.tmpl"].(os.FileInfo),
		fs["/templates/tags.page.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
